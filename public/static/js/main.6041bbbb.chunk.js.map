{"version":3,"sources":["components/Card.js","apis/index.js","apis/movies.js","AppContext.js","components/Searchbar.js","containers/Cards.js","components/Navbar.js","components/MovieForm.js","components/Login.js","apis/auth.js","components/AuthChecker.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","movie","className","style","minWidth","name","imdb_score","genre","map","g","key","director","isEditable","to","pathname","_id","type","onClick","_","deleteMovie","a","fetch","then","resp","getMovies","params","query","Object","keys","p","join","request","postMovie","data","method","headers","Accept","body","JSON","stringify","React","createContext","Searchbar","useState","search","setSearch","submit","onSubmit","htmlFor","id","placeholder","onChange","e","target","value","onKeyPress","event","preventDefault","Cards","context","useContext","AppContext","updateMovies","setUpdateMovies","items","setItems","page","setTotal","sortBy","setSortBy","selectedGenres","setSelectedGenres","reverse","setReverse","searchVal","setSearchVal","useHistory","window","location","href","includes","sortList","useEffect","console","log","getNewMovies","limit","skip","json","totalCount","catch","alert","deleteMov","movieId","confirm","msg","genres","isSelected","find","index","findIndex","splice","push","addGenre","class","role","aria-label","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","item","length","Math","random","Navbar","loggedInUser","data-target","aria-controls","modelSchema","yup","required","min","max","useParams","getSingleMovie","setModel","model","history","schema","Field","disabled","Message","for","Submit","Login","email","setEmail","password","setPassword","showPassword","changeHandler","aria-describedby","status","error","onLogin","user","err","AuthChecker","children","Routes","path","exact","MovieForm","App","setGenres","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6041bbbb.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Card(props) {\n  let { movie = {} } = props;\n  return (\n    <div className=\"col-sm-3\" style={{ minWidth: '20rem' }}>\n      <div className=\"card text-white bg-primary mb-3\">\n        <div className=\"card-header\">\n          {movie.name} | Popularity: {movie['99popularity']}\n        </div>\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">{movie.imdb_score}</h4>\n          {movie.genre\n            ? movie.genre.map((g) => (\n                <span key={g} className=\"badge badge-secondary\">\n                  {g}\n                </span>\n              ))\n            : ''}\n          <p className=\"card-text\">{movie.director}</p>\n          {props.isEditable ? (\n            <>\n              <Link to={{ pathname: `/movie/edit/${movie._id}` }}>\n                <button type=\"button\" className=\"btn btn-secondary\">\n                  Edit\n                </button>\n              </Link>\n              <button type=\"button\" className=\"btn btn-danger\" onClick={(_) => props.deleteMovie(movie._id)}>\n                Delete\n              </button>\n            </>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","export default async (...params) => {\n  return await fetch(...params)\n  .then((resp) => {\n    // if (resp.status === 401) {\n    //   window.history.replaceState({}, 'test', '/');\n    //   throw { msg: 'Unauthorized!' };\n    // }\n    return resp;\n  });\n};\n","import request from './index';\nconst getSingleMovie = (id) => {\n  return request('/api/movie/single?movieId=' + id);\n};\nconst getMovies = (params) => {\n  let query = Object.keys(params)\n    .map((p) => `${p}=${params[p]}`)\n    .join('&');\n  return request('/api/movie?' + query);\n};\nconst getGenres = () => {\n  return request('/api/movie/genres');\n};\nconst postMovie = (data) => {\n  return request('/api/movie', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n};\nconst putMovie = (data) => {\n  return request('/api/movie', {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n};\nconst deleteMovie = (movieId) => {\n  return request('/api/movie', {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ movieId }),\n  });\n};\nexport { getSingleMovie, getMovies, getGenres, postMovie, putMovie, deleteMovie };\n","import React from 'react';\n\nexport default React.createContext({\n  // searchVal: ''\n});\n","import React, { useEffect, useState } from 'react';\n\nfunction Searchbar(props) {\n  let { movie = {} } = props;\n  const [search, setSearch] = useState('');\n  const submit = (_) => props.onSubmit(search);\n  const handleKeyPress = (event) => {\n    if(event.key === 'Enter'){\n      event.preventDefault();\n      submit();\n    }\n  }\n  return (\n    <form>\n      <fieldset>\n        <div className=\"form-group\">\n          <label htmlFor=\"SearchBar\">Search</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"SearchBar\"\n            placeholder=\"Search a movie...\"\n            onChange={(e) => setSearch(e.target.value)}\n            onKeyPress={handleKeyPress}\n          />\n        </div>\n      </fieldset>\n      <button type=\"button\" className=\"btn btn-primary\" onClick={submit}>\n        Search\n      </button>\n    </form>\n  );\n}\n\nexport default Searchbar;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Card from '../components/Card';\nimport { getMovies, deleteMovie } from '../apis/movies';\nimport AppContext from '../AppContext';\nimport Searchbar from '../components/Searchbar';\nimport { useHistory } from 'react-router-dom';\nfunction Cards() {\n  const context = useContext(AppContext);\n  const [updateMovies, setUpdateMovies] = useState(0);\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [sortBy, setSortBy] = useState('99popularity');\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [reverse, setReverse] = useState(1);\n  const [searchVal, setSearchVal] = useState('');\n  const history = useHistory();\n  const count = 25;\n  const isEditable = window.location.href.includes('admin');\n  // let pages = new Array(total / count);\n  const sortList = {\n    '99popularity': 'Popularity',\n    director: 'Director Name',\n    name: 'Movie Name',\n  };\n\n  useEffect(() => {\n    console.log('useEffect');\n    getNewMovies({\n      searchVal: searchVal,\n      limit: count,\n      skip: (page - 1) * count,\n      sortBy,\n      reverse,\n      genre: selectedGenres,\n    });\n  }, [updateMovies, searchVal, page, count, sortBy, reverse, selectedGenres]);\n\n  const getNewMovies = (params = {}) => {\n    getMovies(params)\n      .then((resp) => resp.json())\n      .then((resp) => {\n        setItems(resp.data);\n        setTotal(resp.totalCount || 0);\n      })\n      .catch((e) => alert('There was an error processing your request'));\n  };\n  const addGenre = (genre) => {\n    const genres = [...selectedGenres];\n    let index = genres.findIndex((g) => g === genre);\n    if (index > -1) {\n      genres.splice(index, 1);\n    } else {\n      genres.push(genre);\n    }\n    setSelectedGenres(genres);\n  };\n  const deleteMov = (movieId) => {\n    if (window.confirm(`Are you sure you wish to delete this movie? THIS CANNOT BE UNDONE`))\n      deleteMovie(movieId)\n        .then((resp) => resp.json())\n        .then((resp) => {\n          alert(resp.msg);\n          setUpdateMovies(updateMovies + 1);\n        })\n        .catch((e) => alert(`Sorry, couldn't delete the movie. Please try again later`));\n  };\n  return (\n    <>\n      <Searchbar onSubmit={setSearchVal} />\n      <div>\n        {context.genres.map((genre) => {\n          let isSelected = selectedGenres.find((g) => g === genre);\n          let className = `badge badge-pill ${isSelected ? 'badge-primary' : 'badge-secondary'} mr-2`;\n          return (\n            <span className={className} onClick={(e) => addGenre(genre)}>\n              {genre}\n            </span>\n          );\n        })}\n      </div>\n      <div class=\"btn-group\" role=\"group\" aria-label=\"Button group with nested dropdown\">\n        <button type=\"button\" class=\"btn btn-primary\">\n          Sort By: {sortList[sortBy]}\n        </button>\n        <div class=\"btn-group\" role=\"group\">\n          <button\n            id=\"btnGroupDrop1\"\n            type=\"button\"\n            class=\"btn btn-primary dropdown-toggle\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          ></button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\n            {Object.keys(sortList).map((item) => (\n              <a class=\"dropdown-item\" onClick={(e) => setSortBy(item)}>\n                {sortList[item]}\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n      <div class=\"btn-group\" role=\"group\" aria-label=\"Button group with nested dropdown\">\n        <button type=\"button\" class=\"btn btn-primary\">\n          {sortBy === '99popularity' ? (reverse === 1 ? 'Low to High' : 'High to Low') : reverse === 1 ? 'Alphabetical' : 'Reverse'}\n        </button>\n        <div class=\"btn-group\" role=\"group\">\n          <button\n            id=\"btnGroupDrop1\"\n            type=\"button\"\n            class=\"btn btn-primary dropdown-toggle\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          ></button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\n            {sortBy === '99popularity' ? (\n              <>\n                <a class=\"dropdown-item\" onClick={(e) => setReverse(-1)}>\n                  High to Low\n                </a>\n                <a class=\"dropdown-item\" onClick={(e) => setReverse(1)}>\n                  Low to High\n                </a>\n              </>\n            ) : (\n              <>\n                <a class=\"dropdown-item\" onClick={(e) => setReverse(1)}>\n                  Alphabetical\n                </a>\n                <a class=\"dropdown-item\" onClick={(e) => setReverse(-1)}>\n                  Reverse\n                </a>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      {/* <div className=\"d-flex flex-row bd-highlight mb-3\"> */}\n      <hr></hr>\n      <div class=\"container\">\n        <div class=\"row\">\n          {items.length\n            ? items.map((item) => <Card key={Math.random()} movie={item} isEditable={isEditable} deleteMovie={deleteMov} />)\n            : 'No Movies to display!'}\n        </div>\n      </div>\n      {/* </div> */}\n      {/* <div>\n          <ul class=\"pagination pagination-lg\">\n            <li class=\"page-item disabled\">\n              <a class=\"page-link\" href=\"#\">\n                &laquo;\n              </a>\n            </li>\n            {\n              pages.map(_ => {\n                <li class=\"page-item disabled\">\n                  <a class=\"page-link\" href=\"#\">\n                    &laquo;\n                  </a>\n                </li>\n              })\n            }\n            <li class=\"page-item\">\n              <a class=\"page-link\" href=\"#\">\n                &raquo;\n              </a>\n            </li>\n          </ul>\n        </div> */}\n    </>\n  );\n}\n\nexport default Cards;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../AppContext';\n\nexport default function Navbar() {\n  const { loggedInUser } = useContext(AppContext);\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Navbar\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarColor01\"\n          aria-controls=\"navbarColor01\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n          <ul className=\"navbar-nav mr-auto\">\n            <Link to=\"/\">\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" href=\"#\">\n                  Home <span className=\"sr-only\">(current)</span>\n                </a>\n              </li>\n            </Link>\n            {loggedInUser && loggedInUser.name ? (\n              <>\n                <Link to=\"/login\">\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">\n                      Update Movies\n                    </a>\n                  </li>\n                </Link>\n                <Link to=\"/movie/create\">\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">\n                      Add Movie\n                    </a>\n                  </li>\n                </Link>\n              </>\n            ) : (\n              <Link to=\"/login\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"#\">\n                    Login\n                  </a>\n                </li>\n              </Link>\n            )}\n          </ul>\n          {/* <form className=\"form-inline my-2 my-lg-0\">\n            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\n            <button className=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n        </div>\n      </nav>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Form from 'react-formal';\n// import './Login.css'\nimport { useHistory, useParams } from 'react-router-dom';\nimport * as yup from 'yup';\nimport Navbar from './Navbar';\nimport { putMovie, postMovie, getSingleMovie } from '../apis/movies';\n\nconst modelSchema = yup.object({\n  name: yup.string().required('Name is required'),\n  director: yup.string().required('Director Name is required'),\n  imdb_score: yup.number().required('Score is required').min(0, 'Score should be positive').max(10, 'Score should not be more than 10'),\n  '99popularity': yup.number().required('Popularity is required').min(0, 'Popularity should be positive').max(100, 'Popularity should not be more than 100'),\n  genre: yup.string(),\n});\nexport default () => {\n  const initialState = {\n    name: '',\n    director: '',\n    imdb_score: 0,\n    '99popularity': 0,\n    genre: '',\n  };\n  let { id } = useParams();\n  useEffect(() => {\n    getSingleMovie(id)\n      .then(resp => resp.json())\n      .then(resp => setModel(resp.data))\n      .catch(e => alert('There was an error! Please try again later.'))\n  }, [id])\n  const [model, setModel] = useState(initialState);\n  // const [register, { data, client }] = useMutation(REGISTER_USER_MUTATION)\n  const history = useHistory();\n  const submit = async () => {\n    if(id) await putMovie({...model, movieId: id})\n    else await postMovie(model);\n    history.push('/admin');\n  };\n  return (\n    <>\n      <div className=\"jumbotron\">\n        <div className=\"card\">\n          <div className=\"card-header\">{/* <h2>Sign Up</h2> */}</div>\n          <div className=\"card-body\">\n            <Form className=\"w-100\" schema={modelSchema} value={model} onSubmit={(e) => submit()} onChange={(model) => setModel(model)}>\n              <fieldset className=\"w-100\">\n                <legend className=\"text-center\">{`${id ? 'Edit ' : 'Add '} Movie`}</legend>\n\n                <Form.Field className=\"form-control mt-3 w-100\" name=\"name\" placeholder=\"Movie name\" disabled={!!id}/>\n                <Form.Message className=\"pl-1 text-danger\" for=\"name\" />\n\n                <Form.Field className=\"form-control mt-3 w-100\" name=\"director\" placeholder=\"Director Name\" />\n                <Form.Message className=\"pl-1 text-danger\" for=\"director\" />\n\n                <Form.Field className=\"form-control mt-3 w-100\" name=\"imdb_score\" placeholder=\"IMDB Score\" />\n                <Form.Message className=\"pl-1 text-danger\" for=\"imdb_score\" />\n\n                <Form.Field className=\"form-control mt-3 w-100\" name=\"99popularity\" placeholder=\"Popularity\" />\n                <Form.Message className=\"pl-1 text-danger\" for=\"99popularity\" />\n\n                <Form.Field className=\"form-control mt-3 w-100\" name=\"genre\" placeholder=\"Genre (Comma Seperated)\" />\n                <Form.Message className=\"pl-1 text-danger\" for=\"genre\" />\n\n                <Form.Submit className=\"btn btn-primary mt-3 w-100\" type=\"button\">\n                  Submit\n                </Form.Submit>\n              </fieldset>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { login } from '../apis/auth';\nimport AppContext from '../AppContext';\nimport MovieForm from './MovieForm';\nimport { Redirect } from 'react-router-dom';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const context = useContext(AppContext);\n\n  const changeHandler = (key) => (e) => {\n    // console.log(key);\n    const { value } = e.target;\n    switch (key) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const submit = (_) => {\n    let status;\n    login({ email, password })\n      .then((resp) => {\n        status = resp.status;\n        return resp.json();\n      })\n      .then((resp) => {\n        if (status !== 200) resp.msg ? alert(resp.msg) : console.error(resp);\n        else context.onLogin(resp.user);\n      })\n      .catch((err) => console.error(err));\n  };\n  return (\n    <>\n      {context.loggedInUser && context.loggedInUser.name ? (\n        <Redirect to=\"/admin\" />\n      ) : (\n        <form>\n          <fieldset>\n            <legend>Login</legend>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Enter email\"\n                onChange={changeHandler('email')}\n              />\n              <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">Password</label>\n              <input\n                type={showPassword ? 'text' : 'password'}\n                className=\"form-control\"\n                id=\"exampleInputPassword1\"\n                placeholder=\"Password\"\n                onChange={changeHandler('password')}\n              />\n              <button type=\"button\" className=\"btn btn-primary\" onClick={submit}>\n                Login\n              </button>\n            </div>\n          </fieldset>\n        </form>\n      )}\n    </>\n  );\n}\n","import request from './index'\nconst login = (params) => {\n  return request('/api/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n};\nexport {\n  login\n};\n// fetch('', {\n  \n// })","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AppContext from '../AppContext';\n\nexport default function AuthChecker({ children }) {\n  const context = useContext(AppContext);\n  return <>{context.loggedInUser.name ? children : <Redirect to=\"/login\" />}</>;\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Cards from '../containers/Cards';\nimport Login from './Login';\nimport MovieForm from './MovieForm';\nimport AuthChecker from './AuthChecker';\n\nexport default function Routes() {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Cards />\n        </Route>\n        <Route path=\"/login\" exact>\n          <Login />\n        </Route>\n        <AuthChecker>\n          <Route path=\"/admin\" exact>\n            <Cards />\n          </Route>\n          <Route path=\"/movie/create\" exact>\n            <MovieForm />\n          </Route>\n          <Route path=\"/movie/edit/:id\" exact>\n            <MovieForm />\n          </Route>\n        </AuthChecker>\n      </Switch>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport './bootstrap.css';\nimport Cards from './containers/Cards';\nimport Routes from './components/Routes';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Searchbar from './components/Searchbar';\nimport AppContext from './AppContext';\nimport { getGenres } from './apis/movies';\n\nfunction App() {\n  const [genres, setGenres] = useState([]);\n  const [loggedInUser, setLoggedInUser] = useState({});\n  const context = {\n    genres,\n    loggedInUser,\n    onLogin: setLoggedInUser,\n  };\n  useEffect(() => {\n    // console.log('fetch genres')\n    getGenres()\n      .then((resp) => resp.json())\n      .then((resp) => setGenres(resp.data.genres))\n      .catch((err) => {\n        console.error(err);\n        alert('Sorry, we were unable to fetch the genre list');\n      });\n  }, []);\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppContext.Provider value={context}>\n          <Navbar />\n          <Routes />\n        </AppContext.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}